// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/hobbyfarm/gargantua/pkg/client/clientset/versioned/typed/hobbyfarm.io/v1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeHobbyfarmV1 struct {
	*testing.Fake
}

func (c *FakeHobbyfarmV1) AccessCodes() v1.AccessCodeInterface {
	return &FakeAccessCodes{c}
}

func (c *FakeHobbyfarmV1) Courses() v1.CourseInterface {
	return &FakeCourses{c}
}

func (c *FakeHobbyfarmV1) DynamicBindConfigurations() v1.DynamicBindConfigurationInterface {
	return &FakeDynamicBindConfigurations{c}
}

func (c *FakeHobbyfarmV1) DynamicBindRequests() v1.DynamicBindRequestInterface {
	return &FakeDynamicBindRequests{c}
}

func (c *FakeHobbyfarmV1) Environments() v1.EnvironmentInterface {
	return &FakeEnvironments{c}
}

func (c *FakeHobbyfarmV1) Scenarios() v1.ScenarioInterface {
	return &FakeScenarios{c}
}

func (c *FakeHobbyfarmV1) ScheduledEvents() v1.ScheduledEventInterface {
	return &FakeScheduledEvents{c}
}

func (c *FakeHobbyfarmV1) Sessions() v1.SessionInterface {
	return &FakeSessions{c}
}

func (c *FakeHobbyfarmV1) Users() v1.UserInterface {
	return &FakeUsers{c}
}

func (c *FakeHobbyfarmV1) VirtualMachines() v1.VirtualMachineInterface {
	return &FakeVirtualMachines{c}
}

func (c *FakeHobbyfarmV1) VirtualMachineClaims() v1.VirtualMachineClaimInterface {
	return &FakeVirtualMachineClaims{c}
}

func (c *FakeHobbyfarmV1) VirtualMachineSets() v1.VirtualMachineSetInterface {
	return &FakeVirtualMachineSets{c}
}

func (c *FakeHobbyfarmV1) VirtualMachineTemplates() v1.VirtualMachineTemplateInterface {
	return &FakeVirtualMachineTemplates{c}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeHobbyfarmV1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
